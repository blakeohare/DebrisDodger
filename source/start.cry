import Game;
import Graphics2D;
import Math;
import Random;

const GAME_WIDTH = 640;
const GAME_HEIGHT = 480;
const FPS = 30;
const TWO_PI = 2 * Math.PI;

function new_game() {
	
	player = new Sprite('player', 0, 0);
	sprites = [player];
	
	for (i = 0; i < 550; ++i) {
		x = (Random.randomFloat() * 2 - 1) * 2000;
		y = (Random.randomFloat() * 2 - 1) * 2000;
		type = i == 0 ? 'beacon' : i < 80 ? 'asteroid' : 'particle';
		redo = false;
		if (type != 'particle') {
			if (x ** 2 + y ** 2 < 300 ** 2) {
				redo = true;
			}
		}
		if (redo) {
			--i;
		} else {
			sprites.add(new Sprite(type, x, y));
		}
	}
	
	sprites.reverse();
	
	return sprites;
}

function main() {
	window = new GameWindow("Debris Dodger", FPS, GAME_WIDTH, GAME_HEIGHT);
	
	rc = 0;
	flashy = null;
	
	sprites = new_game();
	player = sprites[-1];
	beacon = sprites[-2];
	
	pressed = {};
	
	while (true) {
	
		start_over = false;
		
		events = window.pumpEvents();
		for (event : events) {
			if (event is Game.KeyEvent) {
				pressed[event.key] = event.down;
				if (event.down && event.key == KeyboardKey.R) {
					start_over = true;
					flashy = [FPS, 3];
				}
			} else if (event is Game.QuitEvent) {
				return;
			}
		}
		
		v = TWO_PI / 30;
		if (pressed.get(KeyboardKey.LEFT, false)) {
			player.theta -= v;
		} else if (pressed.get(KeyboardKey.RIGHT, false)) {
			player.theta += v;
		}
		if (pressed.get(KeyboardKey.UP, false)) {
			player.vx += Math.cos(player.theta) * .1;
			player.vy += Math.sin(player.theta) * .1;
		} else if (pressed.get(KeyboardKey.DOWN, false)) {
			//dist = (player.vx ** 2 + player.vy ** 2) ** .5;
			player.vx *= .9;
			player.vy *= .9;
		}
		
		new_sprites = [];
		for (sprite : sprites) {
			sprite.update(null);
			if (!sprite.dead) {
				new_sprites.add(sprite);
				if (sprite.type == 'asteroid') {
					dx = sprite.x - player.x;
					dy = sprite.y - player.y;
					r = player.radius + sprite.radius;
					if (dx ** 2 + dy ** 2 < r ** 2) {
						start_over = true;
						flashy = [FPS, false];
					}
				}
			}
		}
		
		sprites = new_sprites;
		
		dx = player.x - beacon.x;
		dy = player.y - beacon.y;
		if (dx ** 2 + dy ** 2 < 100) {
			flashy = [FPS, true];
			start_over = true;
		}
		
		if (start_over) {		
			sprites = new_game();
			player = sprites[-1];
			beacon = sprites[-2];
			rc = 0;
		}
		
		xoffset = -player.x + GAME_WIDTH / 2;
		yoffset = -player.y + GAME_HEIGHT / 2;
		
		for (sprite : sprites) {
			sprite.render(rc, xoffset, yoffset);
		}
		
		if (flashy != null) {
			
			
			if (flashy[1] == true) {
				r = 0;
				g = 255;
				b = 0;
			} else if (flashy[1] == false) {
				r = 255;
				g = 0;
				b = 0;
			} else if (flashy[1] == 3) {
				r = 255;
				g = 255;
				b = 255;
			}
			a = flashy[0] * 255 / FPS;
			flashy[0]--;
			if (a > 255) a = 255;
			else if (a < 0) {a = 0;
				flashy = null;
			}
			
			Graphics2D.Draw.rectangle(0, 0, GAME_WIDTH, GAME_HEIGHT, r, g, b, a);
		}
		
		++rc;
		window.clockTick();
	}
}
